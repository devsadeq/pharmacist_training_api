generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  name          String
  email         String
  password      String
  phone         String?
  country       String
  status        Status  @default(pending)
  identity_card Bytes?

  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  plan   Plan   @relation(fields: [planId], references: [id])
  planId String

  notifications Notification[]

  Favorites Favorites?

  exam_enrollments ExamEnrollment[]


}

model Role {
  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User[]
}

model Plan {
  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User[]
}

model Notification {
  id String @id @default(uuid())

  User User[]
}

model Favorites {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Lecture {
  id String @id @default(uuid())
}

model Source {
  id String @id @default(uuid())
}

model Rx {
  id String @id @default(uuid())
}

model Drug {
  id String @id @default(uuid())
}

model Company {
  id String @id @default(uuid())
}

model System {
  id String @id @default(uuid())
}

model Topic {
  id String @id @default(uuid())
}

model SubTopic {
  id String @id @default(uuid())
}

model Banner {
  id String @id @default(uuid())
}

model Coupon {
  id String @id @default(uuid())
}

model Exam {
  id String @id @default(uuid())
}

model Question {
  id String @id @default(uuid())
}

model Option {
  id String @id @default(uuid())
}

model TakenAnswer {
  id String @id @default(uuid())
}

model ExamEnrollment {
  id String @id @default(uuid())

  User   User   @relation(fields: [userId], references: [id])
  userId String
}

enum Status {
  aproved
  pending
  banned
  rejected
}
